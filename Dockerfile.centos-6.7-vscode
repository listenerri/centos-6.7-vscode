FROM centos:6.7

# Using aliyun mirror
RUN sed -e "s|^mirrorlist=|#mirrorlist=|g" \
        -e "s|^#baseurl=http://mirror.centos.org/centos/\$releasever|baseurl=https://mirrors.aliyun.com/centos-vault/6.7|g" \
        -i.bak \
        /etc/yum.repos.d/CentOS-*.repo
# Using aliyun EPEL repo
ADD ./files/epel.repo /etc/yum.repos.d/epel.repo
# Using aliyun IUS repo
ADD ./files/ius-archive.repo /etc/yum.repos.d/ius-archive.repo
# Update local repo cache
RUN yum makecache
# Install pkgs
RUN yum update -y
RUN yum install -y socat file wget tar xz vim which git224 gcc gcc-c++ python36u-devel glibc.i686 zlib.i686
# Clean local repo cache
RUN yum clean all

# Install new version gdb
ADD ./files/gdb-7.9.1-x86_64-with-python36.tar.xz /opt/
ENV PATH=/opt/gdb-7.9.1-x86_64-with-python36/bin:$PATH

# Install patchelf
ADD ./files/patchelf-0.18.0-x86_64.tar.gz /usr/local/

# Install new version cmake
# 3.27.9 was the last official cmake prebuilt binary release with support for centos 6
ADD ./files/cmake-3.27.9-linux-x86_64.tar.gz /opt/
ENV PATH=/opt/cmake-3.27.9-linux-x86_64/bin:$PATH

# Install new toolchain file
ADD ./files/toolchain-x86_64-gcc-8.5.0-glibc-2.28.tar.xz /opt/
# ENVs for vscode server to using toolchain
ENV VSCODE_SERVER_CUSTOM_GLIBC_LINKER=/opt/toolchain-x86_64-gcc-8.5.0-glibc-2.28/x86_64-linux-gnu/x86_64-linux-gnu/sysroot/lib/ld-2.28.so
ENV VSCODE_SERVER_CUSTOM_GLIBC_PATH=/opt/toolchain-x86_64-gcc-8.5.0-glibc-2.28/x86_64-linux-gnu/x86_64-linux-gnu/sysroot/lib
ENV VSCODE_SERVER_PATCHELF_PATH=/usr/local/bin/patchelf

# Add another user
# Create current host user in container when build:
# docker build --build-arg USER_NAME=$(whoami) --build-arg USER_UID=$(id -u)  --build-arg USER_GID=$(id -g) ...
ARG USER_NAME=builder
ARG USER_UID=1000
ARG USER_GID=$USER_UID
RUN groupadd --gid $USER_GID $USER_NAME \
    && useradd --uid $USER_UID --gid $USER_GID -m $USER_NAME

# Change default user
# NOTE: Change default user to non root user caused to Aliyun codeup flow run error
#User $USER_NAME
